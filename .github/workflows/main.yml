name: PR deploy

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  build-and-deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Rust application
        run: cargo build --release

      - name: Deploy to EC2 and set environment variable
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Set up SSH key using ssh-agent
          eval $(ssh-agent -s)
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

          # Transfer application to EC2 instance using SCP
          scp -o StrictHostKeyChecking=no target/release/OnlineLLM ubuntu@$EC2_HOST:/home/ubuntu/
          scp -o StrictHostKeyChecking=no .github/workflows/OnlineLLM.service ubuntu@$EC2_HOST:/home/ubuntu/

          # SSH into EC2 instance and execute commands
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_HOST '
            # Update package list
            sudo apt update

            # Move application to appropriate directory
            sudo mv /home/ubuntu/OnlineLLM /usr/local/bin/OnlineLLM
            sudo chown root:root /usr/local/bin/OnlineLLM
            sudo chmod 755 /usr/local/bin/OnlineLLM

            # Move and set up service file
            sudo mv /home/ubuntu/OnlineLLM.service /etc/systemd/system/OnlineLLM.service
            sudo chown root:root /etc/systemd/system/OnlineLLM.service
            sudo chmod 644 /etc/systemd/system/OnlineLLM.service

            # Set environment variable in systemd service file
            sudo sed -i "/Environment=OPENAI_API_KEY=.*/c\Environment=OPENAI_API_KEY=$OPENAI_API_KEY" /etc/systemd/system/OnlineLLM.service
            sudo systemctl daemon-reload

            # Restart your application service
            sudo systemctl restart OnlineLLM || echo "Failed to restart OnlineLLM service"

            # Enable the service to start on boot
            sudo systemctl enable OnlineLLM

            # Check if the service is running
            if sudo systemctl is-active --quiet OnlineLLM; then
              echo "OnlineLLM service is running"
            else
              echo "OnlineLLM service is not running"
              exit 1
            fi
          '